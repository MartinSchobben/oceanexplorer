[{"path":"https://utrechtuniversity.github.io/oceanexplorer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 oceanexplorer authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Get started with the oceanexplorer","text":"World Ocean Atlas US agency NOAA contains high-resolution oceanographic variables, temperature, salinity nutrient concentrations, high standard quality checks. package facilitates easy access exploration data targets three different audiences: Users programming experience means graphical user interface (Shiny app). Users minimal programming experience hybrid graphical-programming interface can easily integrated R workflow (RStudio addin). Users R programming background. now reversed order explain basic use cases three application types. first word back-end R package. package heavily relies geospatial data analysis facilitated sf (Pebesma 2022) vectors stars (Pebesma 2021) raster data (e.g. NOAA data). highly recommend reading accompanying documentation packages: stars (https://r-spatial.github.io/stars/) sf (https://r-spatial.github.io/sf/) Reading material help dealing data formats R environment.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"shiny-app","dir":"Articles","previous_headings":"","what":"Shiny app","title":"Get started with the oceanexplorer","text":"shiny app hosted Utrecht University can found : https://utrecht-university.shinyapps.io/oceanexplorer/. app allows exploration NOAA database selected data points can extracted csv file.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"load-noaa-data","dir":"Articles","previous_headings":"Shiny app","what":"Load NOAA data","title":"Get started with the oceanexplorer","text":"initial screen starts “parameter” tab left-field allows selection oceanographic variable interest.  drop menu “variable” selects oceanographic variable interest. drop menu “averaging” selects time period mean calculated. period can annual, North Hemisphere seasonal (e.g. Spring, three-month periods) monthly. drop menu “resolution” selects grid resolution mean fields 1- 5-degree longitude/latitude grid. following document lists technical details variable collection presentation: NOAA World Ocean Atlas 2018 Product Documentation. papers page give -depth information variable interest: https://www.ncei.noaa.gov/products/world-ocean-atlas. Clicking “Load data” button extract data NOAA WOA database. operation can take time.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"filter-noaa-data","dir":"Articles","previous_headings":"Shiny app","what":"Filter NOAA data","title":"Get started with the oceanexplorer","text":"last action also automatically drops us “locations” tab (left field), allows us select specific regions now displayed world map variable interest.  Locations tab (Left) field allows filtering dataset. text fields: “depth”, “longitude”, “latitude” specify location extract oceanographic variables. Alternatively, one can click plot (“map” tab) obtain values. possible extract multiple locations providing comma separated list (e.g., 120, 130, 140) text field left (“locations” tab). Note, depth coordinate vectors length, one two length one. data extracted three text fields filled, subsequently clicking button “Extract”. Data extraction can achieved two modes; “point” “fuzzy”, former results precise search, latter option searches area circumference 50\\(\\,\\)km around selected coordinate point. returned value fuzzy search therefore average search area. Currently, fuzzy search yet implemented.\" button “Extract” uses information supplied text fields: “depth”, “longitude”, “latitude” extract oceanographic variable. Hence button active fields filled, otherwise remains greyed-. buttons: “Reset” “Back” revert , last extraction, respectively. two operations can used data extracted clicking interactive plot /obtained using text field search. Map tab (right) field allows changing visual aspects NOAA data. addition plot interactive can clicked (single click). therefore possible use right-hand side screen select data without touching buttons menus left-side. “EPSG” drop-menu enables selection commonly used projections, “4326”. , two stereographic projections “3031” “3995” Antarctic Arctic regions, respectively. option “original” refers original projection NOAA WOA data.\" toggle switch “Fix variable scale” determines whether variable scale fixed current depth slice whole dataset. Loosening variable scale can help highlight nuanced differences certain variables (e.g. phosphate). “depth” slider allows filter depth slices.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"extract-noaa-data","dir":"Articles","previous_headings":"Shiny app","what":"Extract NOAA data","title":"Get started with the oceanexplorer","text":"Now filtered data required can view results table clicking “Table” tab right side screen.  button “Download” enables downloading current table csv format.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"rstudio-addin","dir":"Articles","previous_headings":"","what":"RStudio addin","title":"Get started with the oceanexplorer","text":"RStudio addin --less functionality Shiny app except fewer options. tool , however, great integration R scripts, addin emits code used data selection filtering operation. emitted code actually code used generate graphical output backbone Shiny app RStudio addin.  Clicking “Done” button terminates application emits code point cursor currently resides.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"using-the-oceanexplorer-r-code","dir":"Articles","previous_headings":"","what":"Using the oceanexplorer R code","title":"Get started with the oceanexplorer","text":"three main functionalities Shiny app RStudio addin can also performed programmatically.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"loading-the-package-and-data","dir":"Articles","previous_headings":"Using the oceanexplorer R code","what":"Loading the package and data","title":"Get started with the oceanexplorer","text":"case interested phosphate concentrations month December Agulhas Basin depth 0f 1000 meter seablevel. First, extract data proving variable, grid resolution, averaging period. first time perform call operation can take . default function caches data ensures next time call upon data load faster.","code":"library(oceanexplorer) (WOA <- get_NOAA(\"phosphate\", 1, \"December\")) #> stars object with 4 dimensions and 1 attribute #> attribute(s), summary of first 1e+05 cells: #>       Min.   1st Qu.    Median      Mean  3rd Qu.     Max.  NA's #> p_an     0 0.1869067 0.4515139 0.7004678 1.197695 2.959586 34528 #> dimension(s): #>       from  to offset delta                       refsys point #> lon      1 360   -180     1 +proj=longlat +a=6378137 ...    NA #> lat      1 180    -90     1 +proj=longlat +a=6378137 ...    NA #> depth    1  43     NA    NA                           NA FALSE #> time     1   1     NA    NA                      POSIXct    NA #>                        values x/y #> lon                      NULL [x] #> lat                      NULL [y] #> depth   [0,2.5),...,[775,800)     #> time  1958-12-17 01:42:40 UTC"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"plot","dir":"Articles","previous_headings":"","what":"Plot","title":"Get started with the oceanexplorer","text":"can plot data depth 1000 meter sea level.","code":"plot_NOAA(WOA, depth = 1000)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"filter-agulhas-basin-data-point","dir":"Articles","previous_headings":"","what":"Filter Agulhas Basin data point","title":"Get started with the oceanexplorer","text":"Finally, can filter data point depth Agulhas Basin. can also plot extraction points world map.","code":"(pts <- filter_NOAA(WOA, depth = 1000, coord = list(lat = -46, lon = 20))) #> Simple feature collection with 1 feature and 2 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 20 ymin: -46 xmax: 20 ymax: -46 #> CRS:           +proj=longlat +a=6378137 +f=0.0033528105624174 +pm=0 +no_defs #>       p_an depth       geometry #> 1 1.777159  1000 POINT (20 -46) plot_NOAA(WOA, depth = 1000, points = pts)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Get started with the oceanexplorer","text":"Pebesma, Edzer. 2021. Stars: Spatiotemporal Arrays, Raster Vector Data Cubes. https://CRAN.R-project.org/package=stars. ———. 2022. Sf: Simple Features R. https://CRAN.R-project.org/package=sf.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Schobben. Author, maintainer.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schobben M (2022). oceanexplorer: Explore Planet's Oceans NOAA. R package version 0.0.0.9002, https://utrechtuniversity.github.io/oceanexplorer/https://utrecht-university.shinyapps.io/oceanexplorer/.","code":"@Manual{,   title = {oceanexplorer: Explore our Planet's Oceans with NOAA},   author = {Martin Schobben},   year = {2022},   note = {R package version 0.0.0.9002},   url = {https://utrechtuniversity.github.io/oceanexplorer/ https://utrecht-university.shinyapps.io/oceanexplorer/}, }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"the-oceanexplorer","dir":"","previous_headings":"","what":"Explore our Planet's Oceans with NOAA","title":"Explore our Planet's Oceans with NOAA","text":"goal oceanexplorer enable easy access exploration WORLD OCEAN ATLAS US agency NOAA. Demo ocean explorer","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"check-the-app","dir":"","previous_headings":"","what":"Check the app","title":"Explore our Planet's Oceans with NOAA","text":"Check beta-version app : https://utrecht-university.shinyapps.io/oceanexplorer/","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"Explore our Planet's Oceans with NOAA","text":"construction R (R Core Team 2022) package oceanexplorer associated documentation aided packages; devtools (Wickham, Hester, et al. 2021), roxygen2 (Wickham, Danenberg, et al. 2021), testthat (Wickham 2022), knitr (Xie 2014 ; Xie 2015), rmarkdown (Xie, Allaire, Grolemund 2018; Xie, Dervieux, Riederer 2020), superb guidance book: R packages: organize, test, document, share code, Wickham (2015). Data transformation, cleaning visualization performed : dplyr (Wickham et al. 2022), tibble (Müller Wickham 2021), stringr (Wickham 2019), rlang (Henry Wickham 2022). addition, package relies set packages spatial data analysis: sf (Pebesma 2022), stars (Pebesma 2021), ncmeta (Sumner 2020). app build shiny (Chang et al. 2021) guidance book: Mastering Shiny: Build Interactive Apps, Reports & Dashboards (Wickham 2020). great help learning develop applications. Furthermore, packages shinyjs (Attali 2021), shinyWidgets (Perrier, Meyer, Granjon 2022), waiter (Coene 2022), bslib (Sievert Cheng 2021) thematic (Sievert, Schloerke, Cheng 2021) ensure user friendliness visually pleasing graphics.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Explore our Planet's Oceans with NOAA","text":"can install development version oceanexplorer GitHub","code":"# Install oceanexplorer from GitHub:  # install.packages(\"devtools\") devtools::install_github(\"UtrechtUniversity/oceanexplorer\")"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Explore our Planet's Oceans with NOAA","text":"package allows extraction global databases several physical chemical parameters ocean NOAA WORLD OCEAN ATLAS. Slice specific interval array filter_NOAA(), like : addition, sliced array can plotted, like :  plot can produced taking original data supplying value depth argument specifying range oxygen content oxy_omz.","code":"library(oceanexplorer) # obtain the NOAA world ocean atlas for oxygen content oxy_global <- get_NOAA(\"oxygen\", 1, \"annual\") # filter a depth of 200 meters to show OMZs (oxy_omz <- filter_NOAA(oxy_global, depth = 200)) #> stars object with 2 dimensions and 1 attribute #> attribute(s): #>            Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  NA's #> o_an  0.9701567 164.1833 218.6721 206.2584 266.9612 359.0279 26041 #> dimension(s): #>     from  to offset delta                       refsys point values x/y #> lon    1 360   -180     1 +proj=longlat +a=6378137 ...    NA   NULL [x] #> lat    1 180    -90     1 +proj=longlat +a=6378137 ...    NA   NULL [y] # plot the NOAA world ocean atlas for oxygen content plot_NOAA(oxy_omz) # plot the NOAA world ocean atlas for oxygen content plot_NOAA(oxy_global, depth = 200, rng = range(oxy_omz[[1]]))"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"interactive-exploration","dir":"","previous_headings":"","what":"Interactive exploration","title":"Explore our Planet's Oceans with NOAA","text":"Lastly, package can launch Shiny app interactive exploration datasets. , RStudio addin can launched within RStudio viewer pain executing following code, using Addins drop menu taskbar.","code":"# launch an interactive shiny session NOAA_app() # launch an interactive shiny session NOAA_addin()"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Explore our Planet's Oceans with NOAA","text":"Attali, Dean. 2021. Shinyjs: Easily Improve User Experience Shiny Apps Seconds. https://deanattali.com/shinyjs/. Chang, Winston, Joe Cheng, JJ Allaire, Carson Sievert, Barret Schloerke, Yihui Xie, Jeff Allen, Jonathan McPherson, Alan Dipert, Barbara Borges. 2021. Shiny: Web Application Framework r. https://shiny.rstudio.com/. Coene, John. 2022. Waiter: Loading Screen Shiny. https://CRAN.R-project.org/package=waiter. Henry, Lionel, Hadley Wickham. 2022. Rlang: Functions Base Types Core r Tidyverse Features. https://CRAN.R-project.org/package=rlang. Müller, Kirill, Hadley Wickham. 2021. Tibble: Simple Data Frames. https://CRAN.R-project.org/package=tibble. Pebesma, Edzer. 2021. Stars: Spatiotemporal Arrays, Raster Vector Data Cubes. https://CRAN.R-project.org/package=stars. ———. 2022. Sf: Simple Features r. https://CRAN.R-project.org/package=sf. Perrier, Victor, Fanny Meyer, David Granjon. 2022. shinyWidgets: Custom Inputs Widgets Shiny. https://CRAN.R-project.org/package=shinyWidgets. R Core Team. 2022. R: Language Environment Statistical Computing. Vienna, Austria: R Foundation Statistical Computing. https://www.R-project.org/. Sievert, Carson, Joe Cheng. 2021. Bslib: Custom Bootstrap ’Sass’ Themes Shiny Rmarkdown. https://CRAN.R-project.org/package=bslib. Sievert, Carson, Barret Schloerke, Joe Cheng. 2021. Thematic: Unified Automatic Theming Ggplot2, Lattice, Base r Graphics. https://CRAN.R-project.org/package=thematic. Sumner, Michael. 2020. Ncmeta: Straightforward NetCDF Metadata. https://github.com/hypertidy/ncmeta. Wickham, Hadley. 2015. R Packages: Organize, Test, Document, Share Code. O’Reilly Media, Inc. https://r-pkgs.org/. ———. 2019. Stringr: Simple, Consistent Wrappers Common String Operations. https://CRAN.R-project.org/package=stringr. ———. 2020. Mastering Shiny: Build Interactive Apps, Reports & Dashboards. O’Reilly Media, Inc. https://mastering-shiny.org/. ———. 2022. Testthat: Unit Testing r. https://CRAN.R-project.org/package=testthat. Wickham, Hadley, Peter Danenberg, Gábor Csárdi, Manuel Eugster. 2021. Roxygen2: -Line Documentation r. https://CRAN.R-project.org/package=roxygen2. Wickham, Hadley, Romain François, Lionel Henry, Kirill Müller. 2022. Dplyr: Grammar Data Manipulation. https://CRAN.R-project.org/package=dplyr. Wickham, Hadley, Jim Hester, Winston Chang, Jennifer Bryan. 2021. Devtools: Tools Make Developing r Packages Easier. https://CRAN.R-project.org/package=devtools. Xie, Yihui. 2014. “Knitr: Comprehensive Tool Reproducible Research R.” Implementing Reproducible Computational Research, edited Victoria Stodden, Friedrich Leisch, Roger D. Peng. Chapman; Hall/CRC. http://www.crcpress.com/product/isbn/9781466561595. ———. 2015. Dynamic Documents R Knitr. 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC. https://yihui.org/knitr/. Xie, Yihui, J. J. Allaire, Garrett Grolemund. 2018. R Markdown: Definitive Guide. Boca Raton, Florida: Chapman; Hall/CRC. https://bookdown.org/yihui/rmarkdown. Xie, Yihui, Christophe Dervieux, Emily Riederer. 2020. R Markdown Cookbook. Boca Raton, Florida: Chapman; Hall/CRC. https://bookdown.org/yihui/rmarkdown-cookbook.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Ocean explorer addin — NOAA_addin","title":"Ocean explorer addin — NOAA_addin","text":"Ocean explorer addin","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ocean explorer addin — NOAA_addin","text":"","code":"NOAA_addin(server = NOAA_server(extended = FALSE))"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_addin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ocean explorer addin — NOAA_addin","text":"server Server function. extended Boolean whether launch extended app (default = TRUE) limited version usage RStudio gadget.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_addin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ocean explorer addin — NOAA_addin","text":"Rstudio gadget","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Ocean explorer app — NOAA_app","title":"Ocean explorer app — NOAA_app","text":"Ocean explorer app","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ocean explorer app — NOAA_app","text":"","code":"NOAA_app(server = NOAA_server())  NOAA_server(extended = TRUE)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ocean explorer app — NOAA_app","text":"server Server function. extended Boolean whether launch extended app (default = TRUE) limited version usage RStudio gadget.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ocean explorer app — NOAA_app","text":"Shiny app","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/env_parm_labeller.html","id":null,"dir":"Reference","previous_headings":"","what":"Parsing expressions for plot labels — env_parm_labeller","title":"Parsing expressions for plot labels — env_parm_labeller","text":"Parsing expressions plot labels","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/env_parm_labeller.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parsing expressions for plot labels — env_parm_labeller","text":"","code":"env_parm_labeller(var, prefix = character(1), postfix = character(1))"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/env_parm_labeller.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parsing expressions for plot labels — env_parm_labeller","text":"var Environmental parameter. prefix Prefix. postfix Postfix.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/env_parm_labeller.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parsing expressions for plot labels — env_parm_labeller","text":"Expression","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_NOAA.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter NOAA — filter_NOAA","title":"Filter NOAA — filter_NOAA","text":"Filter NOAA","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_NOAA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter NOAA — filter_NOAA","text":"","code":"filter_NOAA(NOAA, depth = 0, coord = NULL, epsg = NULL, fuzzy = 0)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_NOAA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter NOAA — filter_NOAA","text":"NOAA Dataset WORLD OCEAN ATLAS. depth Depth meters coord List named elements, matrix dimnames, simple feature geometry list column: lon longitude degrees, lat latitude degrees. epsg Coordinate reference number. fuzzy values returned, fuzzy uses buffer area around point extract values adjacent grid cells. fuzzy argument supplied units kilometer(great circle distance).","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_NOAA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter NOAA — filter_NOAA","text":"Either stars object sf dataframe.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_NOAA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter NOAA — filter_NOAA","text":"","code":"if (FALSE) { # get atlas NOAAatlas <- get_NOAA(\"oxygen\", 1, \"annual\") # filter atlas for specific depth and coordinate location filter_NOAA(NOAAatlas, 30) }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"NOAA filter module — filter_ui","title":"NOAA filter module — filter_ui","text":"NOAA filter module","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NOAA filter module — filter_ui","text":"","code":"filter_ui(id, extended = TRUE)  filter_server(   id,   NOAA,   external,   ivars = c(\"depth\", \"lon\", \"lat\"),   variable,   extended = TRUE )"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NOAA filter module — filter_ui","text":"id Namespace id shiny module. extended Boolean whether build extended module (default = TRUE). NOAA Reactive value NOAA dataset. external Reactive values latitude, longitude depth plot module. ivars Character vector variables filtering. variable Reactivevalues selected variable information.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NOAA filter module — filter_ui","text":"Shiny module.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/get_NOAA.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain NOAA WORLD OCEAN ATLAS dataset — get_NOAA","title":"Obtain NOAA WORLD OCEAN ATLAS dataset — get_NOAA","text":"function can also automatically caches extracted files.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/get_NOAA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain NOAA WORLD OCEAN ATLAS dataset — get_NOAA","text":"","code":"get_NOAA(var, spat_res, av_period, cacheNOAA = TRUE)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/get_NOAA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain NOAA WORLD OCEAN ATLAS dataset — get_NOAA","text":"var chemical physical variable interest. spat_res Spatial resolution, either 1 5 degree grid-cells (numeric) . av_period Temporal resolution, either \"annual\", specific seasons (e.g. \"winter\"), month (e.g. \"August\"). cacheNOAA Caching extracted files inst/extdata.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/get_NOAA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain NOAA WORLD OCEAN ATLAS dataset — get_NOAA","text":"Star object.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/get_NOAA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain NOAA WORLD OCEAN ATLAS dataset — get_NOAA","text":"","code":"if (FALSE) { get_NOAA(\"oxygen\", 1, \"annual\") }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/input_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"NOAA data module — input_ui","title":"NOAA data module — input_ui","text":"NOAA data module","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/input_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NOAA data module — input_ui","text":"","code":"input_ui(id, citation = NULL, extended = TRUE)  citation_ui(id)  output_ui(id)  input_server(id)  output_server(id, NOAA, variable)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/input_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NOAA data module — input_ui","text":"id Namespace id shiny module. citation Additional space citation element. extended Boolean whether build extended module (default = TRUE). NOAA Reactive value dataset containing locations coordinates. variable Reactivevalues selected variable information.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/input_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NOAA data module — input_ui","text":"Shiny module.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/oceanexplorer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"oceanexplorer: Explore our Planet's Oceans with NOAA — oceanexplorer-package","title":"oceanexplorer: Explore our Planet's Oceans with NOAA — oceanexplorer-package","text":"package enables easy exploration NOAA WORLD OCEAN ATLAS. includes functions extract NetCDF data repository codes visualise several physical chemical parameters ocean. Shiny app allows interactive exploration data.","code":""},{"path":[]},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/oceanexplorer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"oceanexplorer: Explore our Planet's Oceans with NOAA — oceanexplorer-package","text":"Maintainer: Martin Schobben schobbenmartin@gmail.com (ORCID)","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_NOAA.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting the global NOAA WORLD OCEAN ATLAS — plot_NOAA","title":"Plotting the global NOAA WORLD OCEAN ATLAS — plot_NOAA","text":"Plotting global NOAA WORLD OCEAN ATLAS","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_NOAA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting the global NOAA WORLD OCEAN ATLAS — plot_NOAA","text":"","code":"plot_NOAA(NOAA, depth = NULL, points = NULL, epsg = NULL, rng = NULL)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_NOAA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting the global NOAA WORLD OCEAN ATLAS — plot_NOAA","text":"NOAA Dataset WORLD OCEAN ATLAS. depth Depth meters. points Add locations extracted point geometry. epsg epsg used project data (currently supported 4326, 3031 3995). rng vector two numeric values range environmental parameter.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_NOAA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting the global NOAA WORLD OCEAN ATLAS — plot_NOAA","text":"Ggplot","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_NOAA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting the global NOAA WORLD OCEAN ATLAS — plot_NOAA","text":"","code":"if (FALSE) { # data base <- get_NOAA(\"oxygen\", 1, \"annual\")  # plot plot_NOAA(base)  # coordinates points <- filter_NOAA(NOAA, 1, list(lon = c(-160, -120), lat =  c(11,12)))  # plot plot_NOAA(base, points) }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"NOAA plot module — plot_ui","title":"NOAA plot module — plot_ui","text":"NOAA plot module","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NOAA plot module — plot_ui","text":"","code":"plot_ui(id)  plot_server(id, NOAA, points)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NOAA plot module — plot_ui","text":"id Namespace id shiny module. NOAA Reactive value NOAA dataset. points Add locations extracted point geometry.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NOAA plot module — plot_ui","text":"Shiny module.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/reproject.html","id":null,"dir":"Reference","previous_headings":"","what":"Reprojecting spatial objects to new epsg — reproject","title":"Reprojecting spatial objects to new epsg — reproject","text":"Reprojecting spatial objects new epsg","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/reproject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reprojecting spatial objects to new epsg — reproject","text":"","code":"reproject(obj, epsg, ...)  # S3 method for sf reproject(obj, epsg, ...)  # S3 method for stars reproject(obj, epsg, ...)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/reproject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reprojecting spatial objects to new epsg — reproject","text":"obj sf stars object reprojected. epsg projection. ... Currently supported.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/reproject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reprojecting spatial objects to new epsg — reproject","text":"sf stars object","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/table_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"NOAA table module — table_ui","title":"NOAA table module — table_ui","text":"NOAA table module","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/table_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NOAA table module — table_ui","text":"","code":"table_ui(id, download = NULL)  table_server(id, NOAA, variable)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/table_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NOAA table module — table_ui","text":"id Namespace id shiny module. download Add download button. NOAA Reactive value NOAA dataset. variable Reactivevalues selected variable information.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/table_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NOAA table module — table_ui","text":"Shiny module.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way. enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions). simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[. Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround. Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually : Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"}]

[{"path":[]},{"path":"https://utrechtuniversity.github.io/oceanexplorer/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement schobbenmartin@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 oceanexplorer authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Get started with the oceanexplorer","text":"World Ocean Atlas (WOA) US agency NOAA contains high-resolution high-quality data oceanographic variables, temperature, salinity nutrients. package facilitates easy access exploration data, targets three different audiences: Users programming experience means graphical user interface (Shiny app). Users minimal programming experience hybrid graphical-programming interface can easily integrated R workflow (RStudio addin). Users R programming background. document explain basic use cases three application types. first word back-end R package. package heavily relies geospatial data analysis facilitated sf (Pebesma 2022a) vectors stars (Pebesma 2022b) raster data (.e., native NOAA data format). highly recommend reading accompanying documentation packages intend work NOAA datasets: stars (https://r-spatial.github.io/stars/) sf (https://r-spatial.github.io/sf/)","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"shiny-app","dir":"Articles","previous_headings":"","what":"Shiny app","title":"Get started with the oceanexplorer","text":"shiny app hosted Utrecht University can found : https://utrecht-university.shinyapps.io/oceanexplorer/. app allows exploration NOAA database selected data can extracted csv file.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"load-noaa-data","dir":"Articles","previous_headings":"Shiny app","what":"Load NOAA data","title":"Get started with the oceanexplorer","text":"initial screen starts “parameter” tab left-field allows selection oceanographic variable interest.  drop menu “variable” selects oceanographic variable interest. drop menu “averaging” selects time period mean calculated. period can “annual”, North Hemisphere seasonal (e.g., “Spring”, three-month periods) monthly (e.g., “January”). drop menu “resolution” selects grid resolution mean fields 1- 5-degree longitude/latitude grid. following document lists technical details variable collection presentation: NOAA World Ocean Atlas 2018 Product Documentation. papers page give -depth information variable interest: https://www.ncei.noaa.gov/products/world-ocean-atlas. Clicking “load data” button extracts data NOAA WOA database. operation can take time.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"filter-noaa-data","dir":"Articles","previous_headings":"Shiny app","what":"Filter NOAA data","title":"Get started with the oceanexplorer","text":"last action also automatically drops us “locations” tab (left field), allows us select specific regions now displayed world map variable interest.  Locations tab (Left) field allows filtering dataset. text fields: “depth”, “longitude”, “latitude” specify location extract oceanographic variables. Alternatively, one can click plot (“map” tab) obtain values. possible extract multiple locations providing comma separated list (e.g., 120, 130, 140) text field left (“locations” tab). Note, depth coordinate vectors length, one two length one. data extracted three text fields filled, subsequently clicking button “extract”. Data extraction can achieved two modes; “point” “fuzzy”, former results precise search, latter option searches area circumference 50\\(\\,\\)km around selected coordinate point. returned value fuzzy search therefore average search area. Currently, fuzzy search yet implemented. button “extract” uses information supplied text fields: “depth”, “longitude”, “latitude” extract oceanographic variable. Hence, button active fields filled, otherwise remains greyed-. buttons: “reset” “back” revert , last extraction, respectively. two operations can used data extracted clicking interactive plot /obtained using text field search. Map tab (right) field allows changing visual aspects NOAA data. addition plot interactive can clicked (single click). therefore possible use right-hand side screen select data without touching buttons menus left-side. “projections” drop-menu enables selection commonly used projections, “4326”. , two stereographic projections “3031” “3995” Antarctic Arctic regions, respectively. checkbox “fix variable scale” determines whether variable scale fixed current depth slice whole dataset. Loosening variable scale can help highlight nuanced differences certain variables (e.g., phosphate). “depth” slider allows filter depth slices.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"extract-noaa-data","dir":"Articles","previous_headings":"Shiny app","what":"Extract NOAA data","title":"Get started with the oceanexplorer","text":"Now filtered data required can view results table clicking “table” tab right side screen.  button “download” enables downloading current table csv format.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"rstudio-addin","dir":"Articles","previous_headings":"","what":"RStudio addin","title":"Get started with the oceanexplorer","text":"RStudio addin --less functionality Shiny app except fewer options. tool , however, great integration R scripts, addin emits code used data selection filtering operations. emitted code “behind--scene” code used generate graphical output thus backbone Shiny app RStudio addin.  Clicking “done” button terminates application emits code point cursor currently resides.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"using-the-oceanexplorer-r-code","dir":"Articles","previous_headings":"","what":"Using the oceanexplorer R code","title":"Get started with the oceanexplorer","text":"three main functionalities Shiny app RStudio addin can also performed programmatically.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"loading-the-package-and-data","dir":"Articles","previous_headings":"Using the oceanexplorer R code","what":"Loading the package and data","title":"Get started with the oceanexplorer","text":"Imagine interested phosphate concentrations month December Agulhas Basin depth 0f 1000 meter sealevel. First, extract data proving variable, grid resolution, averaging period. Make sure internet connection order connect NOAA server. operation can take , can sped-future calls caching data. can done setting cache argument TRUE. default get_NOAA cache data.","code":"# load package library(oceanexplorer) # get data (WOA <- get_NOAA(\"phosphate\", 1, \"December\")) #> stars object with 3 dimensions and 1 attribute #> attribute(s), summary of first 1e+05 cells: #>       Min.   1st Qu.    Median      Mean  3rd Qu.     Max.  NA's #> p_an     0 0.1869067 0.4515139 0.7004678 1.197695 2.959586 34528 #> dimension(s): #>       from  to offset delta refsys point                values x/y #> lon      1 360   -180     1 WGS 84    NA                  NULL [x] #> lat      1 180    -90     1 WGS 84    NA                  NULL [y] #> depth    1  43     NA    NA     NA FALSE [0,2.5),...,[775,825)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"plot","dir":"Articles","previous_headings":"","what":"Plot","title":"Get started with the oceanexplorer","text":"can plot phosphate data depth 1000 meter sea level.","code":"plot_NOAA(WOA, depth = 1000)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"filter-agulhas-basin-data-point","dir":"Articles","previous_headings":"","what":"Filter Agulhas Basin data point","title":"Get started with the oceanexplorer","text":"Finally, can filter data point , example, Agulhas Basin. can also project extraction points world map future reference.","code":"(pts <- filter_NOAA(WOA, depth = 1000, coord = list(lon = 20, lat = -46))) #> Simple feature collection with 1 feature and 2 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 20 ymin: -46 xmax: 20 ymax: -46 #> Geodetic CRS:  WGS 84 #>       p_an depth       geometry #> 1 2.146302  1000 POINT (20 -46) plot_NOAA(WOA, depth = 1000, points = pts)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/articles/oceanexplorer.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Get started with the oceanexplorer","text":"Pebesma, Edzer. 2022a. Sf: Simple Features R. https://CRAN.R-project.org/package=sf. ———. 2022b. Stars: Spatiotemporal Arrays, Raster Vector Data Cubes. https://CRAN.R-project.org/package=stars.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Schobben. Author, maintainer, copyright holder. Peter Bijl. Contributor.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schobben M (2022). oceanexplorer: Explore Planet's Oceans NOAA. https://utrechtuniversity.github.io/oceanexplorer/, https://utrecht-university.shinyapps.io/oceanexplorer/, https://www.ncei.noaa.gov/products/world-ocean-atlas.","code":"@Manual{,   title = {oceanexplorer: Explore Our Planet's Oceans with NOAA},   author = {Martin Schobben},   year = {2022},   note = {https://utrechtuniversity.github.io/oceanexplorer/, https://utrecht-university.shinyapps.io/oceanexplorer/, https://www.ncei.noaa.gov/products/world-ocean-atlas}, }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"the-oceanexplorer-","dir":"","previous_headings":"","what":"Explore Our Planet's Oceans with NOAA","title":"Explore Our Planet's Oceans with NOAA","text":"goal oceanexplorer enable easy access exploration World Ocean Atlas US agency NOAA. Demo ocean explorer app","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"check-the-app","dir":"","previous_headings":"","what":"Check the app","title":"Explore Our Planet's Oceans with NOAA","text":"Check app : https://utrecht-university.shinyapps.io/oceanexplorer/","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Explore Our Planet's Oceans with NOAA","text":"project funded ERC Starting grant number 802835, OceaNice, awarded Peter Bijl.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"Explore Our Planet's Oceans with NOAA","text":"construction R (R Core Team 2022) package oceanexplorer associated documentation aided packages; devtools (Wickham et al. 2021), roxygen2 (Wickham, Danenberg, et al. 2022), testthat (Wickham 2022), shinytest (Chang, Csárdi, Wickham 2021), vdiffr (Henry et al. 2022), knitr (Xie 2014 ; Xie 2015), rmarkdown (Xie, Allaire, Grolemund 2018; Xie, Dervieux, Riederer 2020), superb guidance book: R packages: organize, test, document, share code, Wickham (2015). Data transformation, cleaning visualization performed : dplyr (Wickham, François, et al. 2022), ggplot2 (Wickham, Chang, et al. 2022), rlang (Henry Wickham 2022). addition, package relies set packages spatial data analysis: sf (Pebesma 2022a) stars (Pebesma 2022b). app build shiny (Chang et al. 2022) guidance book: Mastering Shiny: Build Interactive Apps, Reports & Dashboards (Wickham 2020) great help learning develop applications. Furthermore, packages shinyjs (Attali 2021), waiter (Coene 2022), bslib (Sievert Cheng 2022) thematic (Sievert, Schloerke, Cheng 2021) ensure user-friendliness interface visually pleasing graphics.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Explore Our Planet's Oceans with NOAA","text":"can install latest version oceanexplorer CRAN","code":"# Install oceanexplorer from CRAN:  install.packages(\"oceanexplorer\")"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Explore Our Planet's Oceans with NOAA","text":"package allows extraction global databases several physical chemical parameters ocean NOAA World Ocean Atlas. Slice specific interval array filter_NOAA(), like : addition, sliced array can plotted, like :  plot can produced taking original data supplying value depth argument specifying range oxygen content oxy_omz.","code":"library(oceanexplorer) # obtain the NOAA world ocean atlas for oxygen content oxy_global <- get_NOAA(\"oxygen\", 1, \"annual\") # filter a depth of 200 meters to show OMZs (oxy_omz <- filter_NOAA(oxy_global, depth = 200)) #> stars object with 2 dimensions and 1 attribute #> attribute(s): #>            Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  NA's #> o_an  0.9701567 164.1833 218.6721 206.2584 266.9612 359.0279 26041 #> dimension(s): #>     from  to offset delta refsys point values x/y #> lon    1 360   -180     1 WGS 84    NA   NULL [x] #> lat    1 180    -90     1 WGS 84    NA   NULL [y] # plot the NOAA world ocean atlas for oxygen content plot_NOAA(oxy_omz, depth = NULL) # plot the NOAA world ocean atlas for oxygen content plot_NOAA(oxy_global, depth = 200, rng = range(oxy_omz[[1]]))"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"interactive-exploration","dir":"","previous_headings":"","what":"Interactive exploration","title":"Explore Our Planet's Oceans with NOAA","text":"Lastly, package can launch Shiny app interactive exploration datasets. RStudio addin can launched within RStudio viewer pain executing following code, using Addins drop menu task-bar.","code":"# launch an interactive shiny session NOAA_app() # launch an interactive shiny session NOAA_addin()"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Explore Our Planet's Oceans with NOAA","text":"Please note oceanexplorer project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Explore Our Planet's Oceans with NOAA","text":"Attali, Dean. 2021. Shinyjs: Easily Improve User Experience Shiny Apps Seconds. https://deanattali.com/shinyjs/. Chang, Winston, Joe Cheng, JJ Allaire, Carson Sievert, Barret Schloerke, Yihui Xie, Jeff Allen, Jonathan McPherson, Alan Dipert, Barbara Borges. 2022. Shiny: Web Application Framework r. https://shiny.rstudio.com/. Chang, Winston, Gábor Csárdi, Hadley Wickham. 2021. Shinytest: Test Shiny Apps. https://github.com/rstudio/shinytest. Coene, John. 2022. Waiter: Loading Screen Shiny. https://CRAN.R-project.org/package=waiter. Henry, Lionel, Thomas Lin Pedersen, T Jake Luciani, Matthieu Decorde, Vaudor Lise. 2022. Vdiffr: Visual Regression Testing Graphical Diffing. https://CRAN.R-project.org/package=vdiffr. Henry, Lionel, Hadley Wickham. 2022. Rlang: Functions Base Types Core r Tidyverse Features. https://CRAN.R-project.org/package=rlang. Pebesma, Edzer. 2022a. Sf: Simple Features r. https://CRAN.R-project.org/package=sf. ———. 2022b. Stars: Spatiotemporal Arrays, Raster Vector Data Cubes. https://CRAN.R-project.org/package=stars. R Core Team. 2022. R: Language Environment Statistical Computing. Vienna, Austria: R Foundation Statistical Computing. https://www.R-project.org/. Sievert, Carson, Joe Cheng. 2022. Bslib: Custom Bootstrap ’Sass’ Themes Shiny Rmarkdown. https://CRAN.R-project.org/package=bslib. Sievert, Carson, Barret Schloerke, Joe Cheng. 2021. Thematic: Unified Automatic Theming Ggplot2, Lattice, Base r Graphics. https://CRAN.R-project.org/package=thematic. Wickham, Hadley. 2015. R Packages: Organize, Test, Document, Share Code. O’Reilly Media, Inc. https://r-pkgs.org/. ———. 2020. Mastering Shiny: Build Interactive Apps, Reports & Dashboards. O’Reilly Media, Inc. https://mastering-shiny.org/. ———. 2022. Testthat: Unit Testing r. https://CRAN.R-project.org/package=testthat. Wickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, Dewey Dunnington. 2022. Ggplot2: Create Elegant Data Visualisations Using Grammar Graphics. https://CRAN.R-project.org/package=ggplot2. Wickham, Hadley, Peter Danenberg, Gábor Csárdi, Manuel Eugster. 2022. Roxygen2: -Line Documentation r. https://CRAN.R-project.org/package=roxygen2. Wickham, Hadley, Romain François, Lionel Henry, Kirill Müller. 2022. Dplyr: Grammar Data Manipulation. https://CRAN.R-project.org/package=dplyr. Wickham, Hadley, Jim Hester, Winston Chang, Jennifer Bryan. 2021. Devtools: Tools Make Developing r Packages Easier. https://CRAN.R-project.org/package=devtools. Xie, Yihui. 2014. “Knitr: Comprehensive Tool Reproducible Research R.” Implementing Reproducible Computational Research, edited Victoria Stodden, Friedrich Leisch, Roger D. Peng. Chapman; Hall/CRC. http://www.crcpress.com/product/isbn/9781466561595. ———. 2015. Dynamic Documents R Knitr. 2nd ed. Boca Raton, Florida: Chapman; Hall/CRC. https://yihui.org/knitr/. Xie, Yihui, J. J. Allaire, Garrett Grolemund. 2018. R Markdown: Definitive Guide. Boca Raton, Florida: Chapman; Hall/CRC. https://bookdown.org/yihui/rmarkdown. Xie, Yihui, Christophe Dervieux, Emily Riederer. 2020. R Markdown Cookbook. Boca Raton, Florida: Chapman; Hall/CRC. https://bookdown.org/yihui/rmarkdown-cookbook.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Ocean explorer addin — NOAA_addin","title":"Ocean explorer addin — NOAA_addin","text":"Wrapper function launches NOAA RStudio addin","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ocean explorer addin — NOAA_addin","text":"","code":"NOAA_addin(cache = FALSE)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_addin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ocean explorer addin — NOAA_addin","text":"cache Caching extracted NOAA file package's extdata directory (default = FALSE). Size individual files around 12 Mb. Use list_NOAA() list cached data resources.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_addin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ocean explorer addin — NOAA_addin","text":"Rstudio gadget","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_addin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ocean explorer addin — NOAA_addin","text":"","code":"if (curl::has_internet() && interactive()) {  # run RStudio addin (can also be launched from `Addins` dropdown menu) NOAA_addin()  }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Ocean explorer app — NOAA_app","title":"Ocean explorer app — NOAA_app","text":"Wrapper function launches NOAA app.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ocean explorer app — NOAA_app","text":"","code":"NOAA_app(cache = FALSE)  NOAA_server(extended = TRUE, cache)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ocean explorer app — NOAA_app","text":"cache Caching extracted NOAA file package's extdata directory (default = FALSE). Size individual files around 12 Mb. Use list_NOAA() list cached data resources. extended Boolean whether build extended module (default = TRUE).","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ocean explorer app — NOAA_app","text":"Shiny app","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ocean explorer app — NOAA_app","text":"","code":"if (curl::has_internet() && interactive()) {  # run app NOAA_app()  }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_data.html","id":null,"dir":"Reference","previous_headings":"","what":"NOAA variable names and units. — NOAA_data","title":"NOAA variable names and units. — NOAA_data","text":"dataset containing variable names units data NOAA made available package.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NOAA variable names and units. — NOAA_data","text":"","code":"NOAA_data"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NOAA variable names and units. — NOAA_data","text":"tibble 7 rows 3 variables: variable oceanographic variable unit variable unit citation citation dataset","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/NOAA_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"NOAA variable names and units. — NOAA_data","text":"https://www.ncei.noaa.gov/products/world-ocean-atlas","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/env_parm_labeller.html","id":null,"dir":"Reference","previous_headings":"","what":"Parsing expressions for plot labels — env_parm_labeller","title":"Parsing expressions for plot labels — env_parm_labeller","text":"Conveniently converts NOAA world ocean atlas parameter names full oceanographic variable names including units parsing plot labels.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/env_parm_labeller.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parsing expressions for plot labels — env_parm_labeller","text":"","code":"env_parm_labeller(var, prefix = character(1), postfix = character(1))"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/env_parm_labeller.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parsing expressions for plot labels — env_parm_labeller","text":"var Environmental parameter. prefix Prefix. postfix Postfix.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/env_parm_labeller.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parsing expressions for plot labels — env_parm_labeller","text":"Expression","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/env_parm_labeller.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parsing expressions for plot labels — env_parm_labeller","text":"","code":"# expression env_parm_labeller(\"t_an\") #> expression( ~ \"Temperature (\" * degree ~ C * \")\" ~ )  # plot with temperature axis label library(ggplot2)  ggplot() +  geom_blank() +  ylab(env_parm_labeller(\"t_an\"))"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_NOAA.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter NOAA — filter_NOAA","title":"Filter NOAA — filter_NOAA","text":"function aids filtering NOAA datasets.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_NOAA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter NOAA — filter_NOAA","text":"","code":"filter_NOAA(NOAA, depth = 0, coord = NULL, epsg = NULL, fuzzy = 0)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_NOAA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter NOAA — filter_NOAA","text":"NOAA Dataset NOAA World Ocean Atlas (get_NOAA()). depth Depth meters coord List named elements, matrix dimnames, simple feature geometry list column: lon longitude degrees, lat latitude degrees. epsg Coordinate reference number. fuzzy values returned, fuzzy uses buffer area around point extract values adjacent grid cells. fuzzy argument supplied units kilometer (great circle distance).","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_NOAA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter NOAA — filter_NOAA","text":"Either stars object sf dataframe.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_NOAA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter NOAA — filter_NOAA","text":"function helps filtering relevant data NOAA World Ocean Atlas 3D arrays (longitude, latitude, depth) stored get_NOAA(). 2D stars object returned providing depth. sf object returned, providing coordinates, list (e.g. list(lon = -120, lat = 12)), matrix (e.g. cbind(lon = -120, lat = 12)), sf object POINT geometries. latter case import follow GeoJSON conventions order sf vectors x (lon = longitude) followed y (lat = latitude).","code":""},{"path":[]},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_NOAA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter NOAA — filter_NOAA","text":"","code":"if (curl::has_internet() && interactive()) {  # get atlas NOAAatlas <- get_NOAA(\"oxygen\", 1, \"annual\")  # filter atlas for specific depth and coordinate location filter_NOAA(NOAAatlas, 30, list(lon = c(-160, -120), lat =  c(11, 12)))  }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"NOAA filter module — filter_ui","title":"NOAA filter module — filter_ui","text":"shiny module (filter_ui() + filter_server()) allows filtering currently loaded NOAA data via shiny textInput() interfaces.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NOAA filter module — filter_ui","text":"","code":"filter_ui(id, extended = TRUE)  filter_server(   id,   NOAA,   external,   ivars = c(\"depth\", \"lon\", \"lat\"),   variable,   extended = TRUE )"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NOAA filter module — filter_ui","text":"id Namespace id shiny module. extended Boolean whether build extended module (default = TRUE). NOAA Reactive value dataset containing locations coordinates. external Reactive values latitude, longitude depth plot module. ivars Character vector variables filtering. variable Reactivevalues selected variable information.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NOAA filter module — filter_ui","text":"Shiny module.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/filter_ui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NOAA filter module — filter_ui","text":"","code":"# run filter module stand-alone if (curl::has_internet() && interactive()) {  library(oceanexplorer) library(shiny)  # data NOAA <- get_NOAA(\"oxygen\", 1, \"annual\")  # gui ui <- fluidPage(filter_ui(\"filter\"), plot_ui(\"worldmap\"))  # server server <-function(input, output, session) {  # table  filter <- filter_server(   \"filter\",   reactive(NOAA),   external = reactiveValues(lon = 190, lat = 33, depth = 20),   variable = reactiveValues(variable = \"temperature\")  )   # plot data  output_plot <- plot_server(\"worldmap\", reactive(NOAA), filter$coord)  }   # run app  shinyApp(ui, server)  }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/get_NOAA.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain NOAA World Ocean Atlas dataset — get_NOAA","title":"Obtain NOAA World Ocean Atlas dataset — get_NOAA","text":"Retrieves data NOAA World Ocean Atlas.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/get_NOAA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain NOAA World Ocean Atlas dataset — get_NOAA","text":"","code":"get_NOAA(var, spat_res, av_period, cache = FALSE)  url_parser(var, spat_res, av_period, cache = FALSE)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/get_NOAA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain NOAA World Ocean Atlas dataset — get_NOAA","text":"var chemical physical variable interest (possible choices: \"temperature\", \"phosphate\", \"nitrate\", \"silicate\", \"oxygen\", \"salinity\", \"density\"). spat_res Spatial resolution, either 1 5 degree grid-cells (numeric) . av_period Temporal resolution, either \"annual\", specific seasons (e.g. \"winter\"), month (e.g. \"August\"). cache Caching extracted NOAA file package's extdata directory (default = FALSE). Size individual files around 12 Mb. Use list_NOAA() list cached data resources.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/get_NOAA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain NOAA World Ocean Atlas dataset — get_NOAA","text":"stars object path.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/get_NOAA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain NOAA World Ocean Atlas dataset — get_NOAA","text":"Functions retrieve data NOAA World Ocean Atlas . Data 3D array (longitude, latitude, depth) loaded stars object. Check NOAA_data available variables, respective units citations. function can automatically cache extracted files (default: cache = FALSE). cached file reside package's extdata directory.","code":""},{"path":[]},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/get_NOAA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain NOAA World Ocean Atlas dataset — get_NOAA","text":"","code":"# path to NOAA server or local data source url_parser(\"oxygen\", 1, \"annual\") #> $external #> [1] \"https://data.nodc.noaa.gov/thredds/dodsC/ncei/woa/oxygen/all/1.00/woa18_all_o00_01.nc\" #>   if (curl::has_internet() && interactive()) {  # retrieve NOAA data get_NOAA(\"oxygen\", 1, \"annual\")  }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/input_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"NOAA data module — input_ui","title":"NOAA data module — input_ui","text":"shiny modules control loading data NOAA world ocean atlas (input_ui() + input_server()). addition, output_ui() + output_server() can used export filtered data csv format. citation_ui() provides associated references dataset currently loaded.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/input_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NOAA data module — input_ui","text":"","code":"input_ui(id, citation = NULL, extended = TRUE)  citation_ui(id)  output_ui(id)  input_server(id, cache = FALSE)  output_server(id, NOAA, variable)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/input_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NOAA data module — input_ui","text":"id Namespace id shiny module. citation Additional space citation element. extended Boolean whether build extended module (default = TRUE). cache Caching extracted NOAA file package's extdata directory (default = FALSE). Size individual files around 12 Mb. Use list_NOAA() list cached data resources. NOAA Reactive value dataset containing locations coordinates. variable Reactivevalues selected variable information.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/input_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NOAA data module — input_ui","text":"Shiny module.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/input_ui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NOAA data module — input_ui","text":"","code":"# run data module stand-alone if (curl::has_internet() && interactive()) {  library(oceanexplorer) library(shiny)  # data NOAA <- get_NOAA(\"oxygen\", 1, \"annual\")  # gui ui <- fluidPage(input_ui(\"NOAA\"), plot_ui(\"worldmap\"))  # server  server <-function(input, output, session) {  # table  NOAA <- input_server(\"NOAA\")  # plot data  output_plot <- plot_server(\"worldmap\", NOAA$data, reactive(NULL)) }  # run app shinyApp(ui, server) }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/list_NOAA.html","id":null,"dir":"Reference","previous_headings":"","what":"List cached NOAA data files — list_NOAA","title":"List cached NOAA data files — list_NOAA","text":"List cached NOAA data files package's extdata directory.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/list_NOAA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List cached NOAA data files — list_NOAA","text":"","code":"list_NOAA()"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/list_NOAA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List cached NOAA data files — list_NOAA","text":"character vector containing names files specified directories (empty files). path exist directory unreadable skipped.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/list_NOAA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List cached NOAA data files — list_NOAA","text":"","code":"# show cached NOAA files list_NOAA() #> character(0)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/oceanexplorer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"oceanexplorer — oceanexplorer-package","title":"oceanexplorer — oceanexplorer-package","text":"package allows easy exploration world ocean atlas US agency National Oceanic Atmospheric Administration (NOAA). includes functions extract NetCDF data repository code visualize several physical chemical parameters ocean. Shiny app allows interactive exploration data.","code":""},{"path":[]},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/oceanexplorer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"oceanexplorer — oceanexplorer-package","text":"Maintainer: Martin Schobben schobbenmartin@gmail.com (ORCID) [copyright holder] contributors: Peter Bijl (ORCID) [contributor]","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_NOAA.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting the global NOAA World Ocean Atlas — plot_NOAA","title":"Plotting the global NOAA World Ocean Atlas — plot_NOAA","text":"Plots NOAA World Ocean Atlas worldmap including optional filtered locations.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_NOAA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting the global NOAA World Ocean Atlas — plot_NOAA","text":"","code":"plot_NOAA(NOAA, depth = 0, points = NULL, epsg = NULL, rng = NULL)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_NOAA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting the global NOAA World Ocean Atlas — plot_NOAA","text":"NOAA Dataset NOAA World Ocean Atlas (get_NOAA()). depth Depth meters. points Add locations extracted point geometry (sf object). epsg epsg used project data (currently supported 4326, 3031and 3995). rng vector two numeric values range oceanographic variable.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_NOAA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting the global NOAA World Ocean Atlas — plot_NOAA","text":"ggplot2::ggplot()","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_NOAA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting the global NOAA World Ocean Atlas — plot_NOAA","text":"worldmap plotted ggplot object default plot surface layer selected  oceanographic variable. One can plot different depth slices selecting appropriate depth meters (e.g., depth = 100). , furthermore possible visualize locations data extractions filter_NOAA(). See examples detailed overview workflow. Different projections worldmap can selected supplying epsg. Currently three projections allowed: 4326, 3031, 3995, besides original. possible fix range color scale (oceanographic variable) custom range. example, one can fix color scale total range ocean (instead current depth slice).","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_NOAA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting the global NOAA World Ocean Atlas — plot_NOAA","text":"","code":"if (curl::has_internet() && interactive()) {  # data NOAA <- get_NOAA(\"oxygen\", 1, \"annual\")  # plot plot_NOAA(NOAA)  # coordinates pts <- filter_NOAA(NOAA, 1, list(lon = c(-160, -120), lat =  c(11,12)))  # plot plot_NOAA(NOAA, points = pts)  }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"NOAA plot module — plot_ui","title":"NOAA plot module — plot_ui","text":"shiny module (plot_ui() + plot_server()) visualizes loaded data according selected epsg projection (\"original\", \"4326\", \"3031\", \"3995\"). addition provides interactive plot interface select location data extraction based single-click.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NOAA plot module — plot_ui","text":"","code":"plot_ui(id)  plot_server(id, NOAA, points)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NOAA plot module — plot_ui","text":"id Namespace id shiny module. NOAA Reactive value dataset containing locations coordinates. points Add locations extracted point geometry.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NOAA plot module — plot_ui","text":"Shiny module.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/plot_ui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NOAA plot module — plot_ui","text":"","code":"# run plot module stand-alone if (curl::has_internet() && interactive()) {  library(oceanexplorer) library(shiny)  # data NOAA <- get_NOAA(\"oxygen\", 1, \"annual\")  # coordinates points <- filter_NOAA(NOAA, 1, list(lon = c(-160, -120), lat =  c(11, 12)))  # gui ui <- fluidPage(plot_ui(\"plot\"))  # server server <-function(input, output, session) {  plot_server(\"plot\", reactive(NOAA), reactive(points)) }  # run app shinyApp(ui, server)  }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/reproject.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-projecting spatial objects to new epsg — reproject","title":"Re-projecting spatial objects to new epsg — reproject","text":"Easy re-projecting epsg sf stars objects.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/reproject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-projecting spatial objects to new epsg — reproject","text":"","code":"reproject(obj, epsg, ...)  # S3 method for sf reproject(obj, epsg, ...)  # S3 method for stars reproject(obj, epsg, ...)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/reproject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-projecting spatial objects to new epsg — reproject","text":"obj sf stars object re-projected. epsg projection (currently : \"3031\", \"3995\"). ... Currently supported.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/reproject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Re-projecting spatial objects to new epsg — reproject","text":"sf stars object","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/reproject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Re-projecting spatial objects to new epsg — reproject","text":"","code":"if (curl::has_internet() && interactive()) { # get data NOAA <- get_NOAA(\"temperature\", 1, \"annual\")  # reproject data with new epsg reproject(NOAA, 3031) }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/table_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"NOAA table module — table_ui","title":"NOAA table module — table_ui","text":"shiny module (table_ui() + table_server()) visualizes loaded filtered data table format.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/table_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NOAA table module — table_ui","text":"","code":"table_ui(id, download = NULL)  table_server(id, NOAA, variable)"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/table_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NOAA table module — table_ui","text":"id Namespace id shiny module. download Add download button. NOAA Reactive value dataset containing locations coordinates. variable Reactivevalues selected variable information.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/table_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NOAA table module — table_ui","text":"Shiny module.","code":""},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/table_ui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NOAA table module — table_ui","text":"","code":"if (curl::has_internet() && interactive()) { # run table module stand-alone  library(oceanexplorer) library(shiny)  # data NOAA <- get_NOAA(\"oxygen\", 1, \"annual\")  # coordinates points <- filter_NOAA(NOAA, 1, list(lon = c(-160, -120), lat =  c(11, 12)))  # gui ui <- fluidPage(table_ui(\"table\"))  # server server <-function(input, output, session) {  # table  output_table <- table_server(   \"table\",   reactive(points),   reactiveValues(parm = \"temperature\", spat = 1, temp = \"annual\")   ) }  # run app shinyApp(ui, server)  }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"https://utrechtuniversity.github.io/oceanexplorer/reference/tidyeval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy eval helpers — tidyeval","text":"enquo() returns quosure enquos() returns list quosures. .data returns data mask. binary operator := injects name left-hand side. as_name() as_label() return character vectors length 1.","code":""},{"path":[]},{"path":"https://utrechtuniversity.github.io/oceanexplorer/news/index.html","id":"oceanexplorer-001","dir":"Changelog","previous_headings":"","what":"oceanexplorer 0.0.1","title":"oceanexplorer 0.0.1","text":"CRAN release: 2022-09-07 Added NEWS.md file track changes package.","code":""}]
